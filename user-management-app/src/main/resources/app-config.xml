<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd
                        http://www.springframework.org/schema/jee
                        http://www.springframework.org/schema/jee/spring-jee.xsd">

  <bean id="commandBundle" class="org.springframework.context.support.ResourceBundleMessageSource">
    <property name="basename" value="Resource"/>
  </bean>

  <context:annotation-config />
  <context:component-scan base-package="com.sample" />

  <bean id="dataSource" class="com.microsoft.sqlserver.jdbc.SQLServerDataSource">
    <property name="serverName" value="192.168.0.38"/>
    <property name="portNumber" value="1433"/>
    <property name="databaseName" value="userManagement"/>
    <property name="user" value="sa"/>
    <property name="password" value=""/>
  </bean>

  <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    <property name="dataSource" ref="dataSource"/>
  </bean>

  <bean id="eventSourceAdapter" class="com.github.apuex.eventsource.EventSourceAdapter.NullAdapter"/>

  <!--
  <bean id="dataSource"
        class="com.atomikos.jdbc.AtomikosDataSourceBean"
        init-method="init" destroy-method="close">
    <property name="poolSize" value="8" />
    <property name="minPoolSize" value="8" />
    <property name="maxPoolSize" value="8" />
    <property name="uniqueResourceName" value="dbDataSource" />
    <property name="xaDataSource" ref="dbDataSource" />
  </bean>

  <bean id="topicConnectionFactory"
        class="com.atomikos.jms.AtomikosConnectionFactoryBean"
        init-method="init" destroy-method="close">
    <property name="minPoolSize" value="8" />
    <property name="maxPoolSize" value="8" />
    <property name="uniqueResourceName" value="jmsTopicConnectionFactory" />
    <property name="xaConnectionFactory">
      <bean class="com.github.apuex.jms.SunXAConnectionFactory">
        <property name="configuration">
          <props>
            <prop key="imqBrokerHostName">192.168.0.166</prop>
            <prop key="imqBrokerHostPort">7676</prop>
            <prop key="imqDefaultUsername">admin</prop>
            <prop key="imqDefaultPassword">admin</prop>
            <prop key="imqReconnectEnabled">true</prop>
            <prop key="imqReconnectInterval">3000</prop>
            <prop key="imqReconnectAttempts">1000000</prop>
          </props>
        </property>
      </bean>
    </property>
  </bean>

  <bean id="atomikosTransactionManager"
        class="com.atomikos.icatch.jta.UserTransactionManager"
        init-method="init" destroy-method="close">
    <property name="forceShutdown" value="false" />
  </bean>

  <bean id="atomikosUserTransaction"
        class="com.atomikos.icatch.jta.J2eeUserTransaction">
    <property name="transactionTimeout" value="300" />
  </bean>

  <bean id="transactionManager"
        class="org.springframework.transaction.jta.JtaTransactionManager"
        depends-on="atomikosTransactionManager,atomikosUserTransaction">
    <property name="transactionManager"
              ref="atomikosTransactionManager" />
    <property name="userTransaction"
              ref="atomikosUserTransaction" />
    <property name="allowCustomIsolationLevels" value="true" />
  </bean>

  <tx:annotation-driven transaction-manager="transactionManager"/>

  <bean id="userManagementEventNotifyTopic" class="com.sun.messaging.BasicTopic">
    <constructor-arg value="USER_MANAGEMENT_EVENT_NOTIFY_TOPIC"/>
  </bean>

  <bean id="otherSystemEventNotifyTopic" class="com.sun.messaging.BasicTopic">
    <constructor-arg value="OTHER_SYSTEM_EVENT_NOTIFY_TOPIC"/>
  </bean>

  <bean id="jmsProtobufConverter" class="com.github.apuex.protobuf.jms.ProtoJmsMessageConverter">
    <property name="protobufDescriptors">
      <list>
        <value>/protobuf/descriptor-sets/user-management-message-1.0-SNAPSHOT.protobin</value>
        <value>/runtime-1.0.5.protobin</value>
      </list>
    </property>
  </bean>

  <bean id="eventNotifyTemplate" class="org.springframework.jms.core.JmsTemplate">
    <property name="connectionFactory" ref="topicConnectionFactory"/>
    <property name="defaultDestination" ref="userManagementEventNotifyTopic" />
    <property name="messageConverter" ref="jmsProtobufConverter" />
  </bean>

  <bean id="eventSourceAdapter" class="com.github.apuex.eventsource.jms.EventSourceJmsAdapter">
    <property name="jmsTemplate" ref="eventNotifyTemplate"/>
  </bean>

  <bean id="messageListenerDelegate" class="com.sample.integration.ProtobufMessageListenerDelegate"/>

  <bean id="messageListenerAdapter" class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
    <constructor-arg ref="messageListenerDelegate"/>
    <property name="messageConverter" ref="jmsProtobufConverter"/>
  </bean>

  <bean id="taskScheduler" class="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler">
    <property name="poolSize" value="8"/>
    <property name="threadNamePrefix" value="message-listener"/>
  </bean>

  <bean id="jmsMessageListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
    <property name="connectionFactory" ref="topicConnectionFactory"/>
    <property name="destination" ref="otherSystemEventNotifyTopic"/>
    <property name="messageListener" ref="messageListenerAdapter"/>
    <property name="taskExecutor" ref="taskScheduler"/>
    <property name="subscriptionName" value="user-management-subscription"/>
    <property name="clientId" value="user-management-app"/>
    <property name="subscriptionDurable" value="true"/>
    <property name="subscriptionShared" value="true"/>
  </bean>
  -->
</beans>
